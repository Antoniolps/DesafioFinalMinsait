// <auto-generated />
using System;
using Desafio_Missait_Livraria.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Desafio_Missait_Livraria.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230223002835_Banco")]
    partial class Banco
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutorLivro", b =>
                {
                    b.Property<Guid>("Autor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Livro")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Autor", "Livro");

                    b.HasIndex("Livro");

                    b.ToTable("AutorLivro");
                });

            modelBuilder.Entity("Desafio_Missait_Livraria.Models.Autor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("Desafio_Missait_Livraria.Models.Livro", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnType("date");

                    b.Property<int>("Edicao")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("QtdPaginas")
                        .HasColumnType("int");

                    b.Property<string>("Resumo")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("SubTitulo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Livros");
                });

            modelBuilder.Entity("AutorLivro", b =>
                {
                    b.HasOne("Desafio_Missait_Livraria.Models.Livro", null)
                        .WithMany()
                        .HasForeignKey("Autor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Desafio_Missait_Livraria.Models.Autor", null)
                        .WithMany()
                        .HasForeignKey("Livro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
